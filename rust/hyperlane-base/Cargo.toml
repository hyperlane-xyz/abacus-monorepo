cargo-features = ["workspace-inheritance"]

[package]
name = "hyperlane-base"
documentation.workspace = true
edition.workspace = true
homepage.workspace = true
license-file.workspace = true
publish.workspace = true
version.workspace = true

[dependencies]
async-trait.workspace = true
axum.workspace = true
bs58.workspace = true
color-eyre = { workspace = true, optional = true }
config.workspace = true
console-subscriber.workspace = true
convert_case.workspace = true
derive_builder.workspace = true
derive-new.workspace = true
ed25519-dalek.workspace = true
ethers.workspace = true
eyre.workspace = true
fuels.workspace = true
futures.workspace = true
futures-util.workspace = true
itertools.workspace = true
maplit.workspace = true
mockall.workspace = true
paste.workspace = true
prometheus.workspace = true
rocksdb.workspace = true
serde.workspace = true
serde_json.workspace = true
solana-sdk.workspace = true
static_assertions.workspace = true
tempfile = { workspace = true, optional = true }
thiserror.workspace = true
tokio = { workspace = true, features = ["rt", "macros", "parking_lot"] }
tracing-error.workspace = true
tracing-futures.workspace = true
tracing-subscriber = { workspace = true, features = ["json", "ansi"] }
tracing.workspace = true
url.workspace = true
warp.workspace = true
ya-gcp.workspace = true

backtrace = { workspace = true, optional = true }
backtrace-oneline = { path = "../utils/backtrace-oneline", optional = true }

ethers-prometheus = { path = "../ethers-prometheus", features = ["serde"] }
hyperlane-core = { path = "../hyperlane-core", features = ["agent", "float"] }
hyperlane-ethereum = { path = "../chains/hyperlane-ethereum" }
hyperlane-fuel = { path = "../chains/hyperlane-fuel" }
hyperlane-sealevel = { path = "../chains/hyperlane-sealevel" }
hyperlane-cosmos = { path = "../chains/hyperlane-cosmos"}
hyperlane-test = { path = "../hyperlane-test" }

# dependency version is determined by etheres
rusoto_core = "*"
rusoto_kms = "*"
rusoto_s3 = "*"
rusoto_sts = "*"
opentelemetry = "0.22.0"
opentelemetry-otlp = "0.15.0"
tracing-opentelemetry = "0.23.0"
opentelemetry-semantic-conventions = "0.14.0"
opentelemetry_sdk = {version = "0.22.1", features = ["rt-tokio", "rt-tokio-current-thread"]}
tracing-stackdriver = { version =  "0.9.0", features = ["opentelemetry"] }
opentelemetry-stackdriver = { version = "0.19" }

[dev-dependencies]
color-eyre.workspace = true
reqwest.workspace = true
tempfile.workspace = true
tracing-test.workspace = true
walkdir.workspace = true

[features]
default = ["oneline-errors", "color-eyre"]
oneline-eyre = ["backtrace-oneline", "backtrace"]
oneline-errors = ["oneline-eyre"]
test-utils = ["dep:tempfile"]
