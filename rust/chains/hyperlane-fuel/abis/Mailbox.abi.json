{
  "types": [
    {
      "typeId": 0,
      "type": "()",
      "components": [],
      "typeParameters": null
    },
    {
      "typeId": 1,
      "type": "(_, _)",
      "components": [
        {
          "name": "__tuple_element",
          "type": 2,
          "typeArguments": null
        },
        {
          "name": "__tuple_element",
          "type": 20,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 2,
      "type": "b256",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 3,
      "type": "bool",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 4,
      "type": "enum Identity",
      "components": [
        {
          "name": "Address",
          "type": 14,
          "typeArguments": null
        },
        {
          "name": "ContractId",
          "type": 15,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 5,
      "type": "enum Option",
      "components": [
        {
          "name": "None",
          "type": 0,
          "typeArguments": null
        },
        {
          "name": "Some",
          "type": 6,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        6
      ]
    },
    {
      "typeId": 6,
      "type": "generic T",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 7,
      "type": "raw untyped ptr",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 8,
      "type": "str[12]",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 9,
      "type": "str[16]",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 10,
      "type": "str[6]",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 11,
      "type": "str[7]",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 12,
      "type": "str[8]",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 13,
      "type": "str[9]",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 14,
      "type": "struct Address",
      "components": [
        {
          "name": "value",
          "type": 2,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 15,
      "type": "struct ContractId",
      "components": [
        {
          "name": "value",
          "type": 2,
          "typeArguments": null
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 16,
      "type": "struct Message",
      "components": [
        {
          "name": "version",
          "type": 22,
          "typeArguments": null
        },
        {
          "name": "nonce",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "origin",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "sender",
          "type": 2,
          "typeArguments": null
        },
        {
          "name": "destination",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "recipient",
          "type": 2,
          "typeArguments": null
        },
        {
          "name": "body",
          "type": 19,
          "typeArguments": [
            {
              "name": "",
              "type": 22,
              "typeArguments": null
            }
          ]
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 17,
      "type": "struct OwnershipTransferredEvent",
      "components": [
        {
          "name": "previous_owner",
          "type": 5,
          "typeArguments": [
            {
              "name": "",
              "type": 4,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "new_owner",
          "type": 5,
          "typeArguments": [
            {
              "name": "",
              "type": 4,
              "typeArguments": null
            }
          ]
        }
      ],
      "typeParameters": null
    },
    {
      "typeId": 18,
      "type": "struct RawVec",
      "components": [
        {
          "name": "ptr",
          "type": 7,
          "typeArguments": null
        },
        {
          "name": "cap",
          "type": 21,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        6
      ]
    },
    {
      "typeId": 19,
      "type": "struct Vec",
      "components": [
        {
          "name": "buf",
          "type": 18,
          "typeArguments": [
            {
              "name": "",
              "type": 6,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "len",
          "type": 21,
          "typeArguments": null
        }
      ],
      "typeParameters": [
        6
      ]
    },
    {
      "typeId": 20,
      "type": "u32",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 21,
      "type": "u64",
      "components": null,
      "typeParameters": null
    },
    {
      "typeId": 22,
      "type": "u8",
      "components": null,
      "typeParameters": null
    }
  ],
  "functions": [
    {
      "inputs": [],
      "name": "count",
      "output": {
        "name": "",
        "type": 20,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " Returns the number of inserted leaves (i.e. messages) in the merkle tree."
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "message_id",
          "type": 2,
          "typeArguments": null
        }
      ],
      "name": "delivered",
      "output": {
        "name": "",
        "type": 3,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "destination_domain",
          "type": 20,
          "typeArguments": null
        },
        {
          "name": "recipient",
          "type": 2,
          "typeArguments": null
        },
        {
          "name": "message_body",
          "type": 19,
          "typeArguments": [
            {
              "name": "",
              "type": 22,
              "typeArguments": null
            }
          ]
        }
      ],
      "name": "dispatch",
      "output": {
        "name": "",
        "type": 2,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " Dispatches a message to the destination domain and recipient."
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " Returns the message's ID."
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            ""
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " ### Arguments"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            ""
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " * `destination_domain` - The domain of the destination chain."
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " * `recipient` - Address of the recipient on the destination chain."
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " * `message_body` - Raw bytes content of the message body."
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "get_default_ism",
      "output": {
        "name": "",
        "type": 15,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "latest_checkpoint",
      "output": {
        "name": "",
        "type": 1,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " Returns a checkpoint representing the current merkle tree:"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " (root of merkle tree, index of the last element in the tree)."
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "metadata",
          "type": 19,
          "typeArguments": [
            {
              "name": "",
              "type": 22,
              "typeArguments": null
            }
          ]
        },
        {
          "name": "_message",
          "type": 16,
          "typeArguments": null
        }
      ],
      "name": "process",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "root",
      "output": {
        "name": "",
        "type": 2,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "doc-comment",
          "arguments": [
            " Calculates and returns the merkle tree's current root."
          ]
        },
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "module",
          "type": 15,
          "typeArguments": null
        }
      ],
      "name": "set_default_ism",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "owner",
      "output": {
        "name": "",
        "type": 5,
        "typeArguments": [
          {
            "name": "",
            "type": 4,
            "typeArguments": null
          }
        ]
      },
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " Gets the current owner."
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "new_owner",
          "type": 5,
          "typeArguments": [
            {
              "name": "",
              "type": 4,
              "typeArguments": null
            }
          ]
        }
      ],
      "name": "transfer_ownership",
      "output": {
        "name": "",
        "type": 0,
        "typeArguments": null
      },
      "attributes": [
        {
          "name": "doc-comment",
          "arguments": [
            " Transfers ownership to `new_owner`."
          ]
        },
        {
          "name": "doc-comment",
          "arguments": [
            " Reverts if the msg_sender is not the current owner."
          ]
        },
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": 0,
      "loggedType": {
        "name": "",
        "type": 8,
        "typeArguments": null
      }
    },
    {
      "logId": 1,
      "loggedType": {
        "name": "",
        "type": 9,
        "typeArguments": null
      }
    },
    {
      "logId": 2,
      "loggedType": {
        "name": "",
        "type": 12,
        "typeArguments": null
      }
    },
    {
      "logId": 3,
      "loggedType": {
        "name": "",
        "type": 8,
        "typeArguments": null
      }
    },
    {
      "logId": 4,
      "loggedType": {
        "name": "",
        "type": 13,
        "typeArguments": null
      }
    },
    {
      "logId": 5,
      "loggedType": {
        "name": "",
        "type": 11,
        "typeArguments": null
      }
    },
    {
      "logId": 6,
      "loggedType": {
        "name": "",
        "type": 2,
        "typeArguments": null
      }
    },
    {
      "logId": 7,
      "loggedType": {
        "name": "",
        "type": 10,
        "typeArguments": null
      }
    },
    {
      "logId": 8,
      "loggedType": {
        "name": "",
        "type": 10,
        "typeArguments": null
      }
    },
    {
      "logId": 9,
      "loggedType": {
        "name": "",
        "type": 17,
        "typeArguments": []
      }
    }
  ],
  "messagesTypes": [],
  "configurables": []
}