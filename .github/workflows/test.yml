name: test

on:
  # Triggers the workflow on push or pull request against main
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: e2e-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

env:
  DEBUG: 'hyperlane:*'
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  install:
    runs-on: larger-runner
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}

      - name: yarn-install
        run: |
          yarn install
          CHANGES=$(git status -s --ignore-submodules)
          if [[ ! -z $CHANGES ]]; then
            echo "Changes found: $CHANGES"
            git diff
            exit 1
          fi

  build:
    runs-on: larger-runner
    needs: [install]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}

      - name: build-cache
        uses: actions/cache@v3
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: build
        run: yarn build

  lint-prettier:
    runs-on: larger-runner
    needs: [install]
    steps:
      - uses: actions/checkout@v3
        with:
          # check out full history
          fetch-depth: 0

      - name: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}

      - name: lint
        run: yarn lint

      - name: prettier
        run: |
          yarn prettier
          CHANGES=$(git status -s)
          if [[ ! -z $CHANGES ]]; then
            echo "Changes found: $CHANGES"
            exit 1
          fi

  unit-test:
    runs-on: larger-runner
    needs: [build]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: foundry-install
        uses: onbjerg/foundry-toolchain@v1

      - name: build-cache
        uses: actions/cache@v3
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: Unit Tests
        run: yarn test

  agent-build:
    runs-on: larger-runner
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: foundry-install
        uses: onbjerg/foundry-toolchain@v1

      - name: setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Free disk space
        run: |
          # Based on https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Install mold linker
        uses: rui314/setup-mold@v1
        with:
          mold-version: 2.0.0
          make-default: true

      - name: rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: 'v2-rust'
          shared-key: 'e2e'
          workspaces: |
            ./rust

      - name: agent build
        run: cargo build --release --bin run-locally
        working-directory: ./rust

  agent-e2e:
    runs-on: larger-runner
    needs: [agent-build]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
        
      - name: foundry-install
        uses: onbjerg/foundry-toolchain@v1
      
      - name: rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: 'v2-rust'
          shared-key: 'e2e'
          workspaces: |
            ./rust

      - name: run CosmWasm test
        run: RUST_BACKTRACE=1 cargo test --package run-locally --bin run-locally -- cosmos::test --nocapture
        working-directory: ./rust

      - name: run test (excluding CosmWasm)
        run: ./target/release/run-locally
        working-directory: ./rust
        env:
          E2E_CI_MODE: 'true'
          E2E_CI_TIMEOUT_SEC: '600'
          E2E_KATHY_MESSAGES: '20'

  cli-e2e:
    runs-on: larger-runner
    needs: [build, agent-build]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}

      - name: build-cache
        uses: actions/cache@v3
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: test
        run: ./typescript/cli/ci-test.sh
        working-directory: ./typescript/cli

  env-test:
    runs-on: larger-runner
    needs: [build]
    strategy:
      matrix:
        environment: [testnet4, mainnet3]
        module: [ism, core, helloworld]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: Test ${{ matrix.environment }} ${{ matrix.module }} deployment (check, deploy, govern, check again)
        run: cd typescript/infra && ./fork.sh ${{ matrix.environment }} ${{ matrix.module }}

  coverage:
    runs-on: larger-runner
    needs: [build]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/cache@v3
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: yarn-cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-cache-${{ hashFiles('./yarn.lock') }}

      - name: Run tests with coverage
        run: yarn coverage
        env:
          NODE_OPTIONS: --max_old_space_size=4096

      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
