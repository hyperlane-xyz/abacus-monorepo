name: agent-release-artifacts

on:
  pull_request:
  release:
    types: [published]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: agent-release-artifacts-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

defaults:
  run:
    working-directory: ./rust

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - TARGET: x86_64-unknown-linux-gnu
            OS: ubuntu-latest
#          - TARGET: x86_64-unknown-linux-musl
#            OS: ubuntu-latest
          - TARGET: aarch64-unknown-linux-gnu
            OS: ubuntu-latest
#          - TARGET: aarch64-unknown-linux-musl
#            OS: ubuntu-latest
          - TARGET: x86_64-apple-darwin
            OS: macos-latest
          - TARGET: aarch64-apple-darwin
            OS: macos-latest
          - TARGET: x86_64-pc-windows-msvc
            OS: windows-latest
#          - TARGET: x86_64-pc-windows-gnu
#            OS: windows-latest
    runs-on: ${{ matrix.OS }}
    env:
      TARGET: ${{ matrix.TARGET }}
      OS: ${{ matrix.OS }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ubuntu setup
        run: |
          sudo apt-get install -qq crossbuild-essential-arm64 crossbuild-essential-armhf
          
          # some additional configuration for cross-compilation on linux
          cat >>~/.cargo/config <<EOF
          [target.aarch64-unknown-linux-gnu]
          linker = "aarch64-linux-gnu-gcc"
          [target.aarch64-unknown-linux-musl]
          linker = "aarch64-linux-gnu-gcc"
          EOF
        if: ${{ matrix.OS == 'ubuntu-latest' }}
      - name: setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: ${{ matrix.TARGET }}
      - name: setup target
        run: rustup target add ${{ matrix.TARGET }}
      - name: build
        run: cargo build --release --target $TARGET --bin relayer --bin validator
      - name: upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.TARGET }}
          path: |
            rust/${{ matrix.TARGET }}/release/validator
            rust/${{ matrix.TARGET }}/release/relayer
