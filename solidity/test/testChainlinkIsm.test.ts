import { expect } from 'chai';
import { Wallet } from 'ethers';
import { ethers } from 'hardhat';

import { utils } from '@hyperlane-xyz/utils';

import { MultisigCcipReadIsm, MultisigCcipReadIsm__factory } from '../types';

describe('TestCcipReadIsm', () => {
  let ism: MultisigCcipReadIsm;

  before(async () => {
    const [signer] = await ethers.getSigners();
    const factory = new MultisigCcipReadIsm__factory(signer);
    ism = await factory.deploy();
  });

  it('verifies in JS', async () => {
    const report =
      '0x000000000000000000000008afbcf24ae1efc261fa46eec781904900009377051106150b14050804130c00120e0f161b1a010a1007191e1718030d021d0000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001d0000000000000000000000000000000000000000000000000000002bf173eca00000000000000000000000000000000000000000000000000000002bf1b0f5a00000000000000000000000000000000000000000000000000000002bf1edfea00000000000000000000000000000000000000000000000000000002bf25fd3400000000000000000000000000000000000000000000000000000002bf2f7e6ab0000000000000000000000000000000000000000000000000000002bf2f7e6ab0000000000000000000000000000000000000000000000000000002bf2f7e6ab0000000000000000000000000000000000000000000000000000002bf35493800000000000000000000000000000000000000000000000000000002bf35493800000000000000000000000000000000000000000000000000000002bf35493800000000000000000000000000000000000000000000000000000002bf35493800000000000000000000000000000000000000000000000000000002bf3777f580000000000000000000000000000000000000000000000000000002bf37f68580000000000000000000000000000000000000000000000000000002bf386c1980000000000000000000000000000000000000000000000000000002bf3a9ad700000000000000000000000000000000000000000000000000000002bf3a9ad700000000000000000000000000000000000000000000000000000002bf3b180900000000000000000000000000000000000000000000000000000002bf3cea5800000000000000000000000000000000000000000000000000000002bf3cea5800000000000000000000000000000000000000000000000000000002bf3d07e280000000000000000000000000000000000000000000000000000002bf3d164a00000000000000000000000000000000000000000000000000000002bf3d164a00000000000000000000000000000000000000000000000000000002bf3d164a00000000000000000000000000000000000000000000000000000002bf3e2619a0000000000000000000000000000000000000000000000000000002bf3e2619a0000000000000000000000000000000000000000000000000000002bf3e2619a0000000000000000000000000000000000000000000000000000002bf3ef66ed0000000000000000000000000000000000000000000000000000002bf3fc6c400000000000000000000000000000000000000000000000000000002bf4037db5';
    const metadata =
      '0x000000000000000000000000000000000000000000000000000000000000000001fa13dc733b55c7a8340955e6cd481404439a3586e84f499b3866dc990aad3c7f73eb4e5a27680a547d5931e115b8c8f6a006eea7545462565cd8b874f0fc5f3a1b9360dc434ff368295bd245979675da1229b866cffc21284d0bda3a1858aac0e914780c16002e2d98016f85f9df28cc5a0adf3468c72a7ff808b8f6e8580b5b741b2a7791568725ee79adde81987dc53673f64c98d5289e151051df22dcadc2d1373fc07a7eabff163b4363338b081c3bf4599645c455895bc815694a10c98a4b5b1ca84f629a18bd26c51206d18bf66739ef29ffe5d71393a42d1b765a15f2d889a6221feb2f18366f74266d0fce3b97e2081fc3470e5856a97f4223b3fdf1f3bea71c36896eb7c5ac38a3f4a8023f168b847ea6db7d2c0390b7a3bd20438aadd4874e0b48d66df8ab6dc6a492656b8ee48d23e7c2ee6c68579de2e963d53a97024e1c1bbb21244ccc4d565f0835d0a6856327da601e98c26558a4b3b192d8496273731c618d0982d7e74b3010ba7112f599e407c11383054d1843b9518b89fd928ce6311bd89f92fafcf1d7580694815b447c0c8ea35cf32f7e83dbf9b8d785c6610e2ed6169d891b4d54665c163919a96d8f0649e45378fe47e9f18e9a61390af4bb20061c23b3270c50586c3fe449e6ff6a50a3550974443fbc9a96de7de11cfb855a6a8065681c2db2ba4f60ee6237b478e45a3c1eaba0c7ef5366ffcac5f74fe80a77561b46da4000108b7bc4c40ef949f4704be7a12082e8e3050d7acc77a4a4cc994ccd35356ddf2f66289da5d097f881fb909f3f8ee191dee6f08aba8e7f110142c1041bc4d3b53cd141eb0feb285e9800b02692d777eae8fdb21cfad543abd6c0c981122e60687a2e4365fd9527aa17976b73b61dc00d6a8b36aa8ca2cd8788bd2b33041bd76b68be970d8e29cdfd96e88052a8f5a9df1f4401588de5aa1f595d6ea15ce81cd6d20cf3088546259413ccae6fcdb8d9ab5880969c867747a646bb7bc796471b000000000000000000000000080d263faa8cbd848f0b9b24b40e1f23ea06b3a300000000000000000000000021389cbcdb25c8859c704bd8cd7252902384fcef0000000000000000000000005007b477f939646b4e4416afcef6b00567f5f078000000000000000000000000bd34530f411130fd7acb88b8251009a0829379aa000000000000000000000000af447da1e8c277c41983b1732becf39129be5ca6000000000000000000000000be15b23e9f03e3bb44c5e35549354649fb25b87b000000000000000000000000d1c8b1e58c1186597d1897054b738c551ec74bd4000000000000000000000000656fc633eb33cf5dad0bcea0e42cde85fb7a4ab8000000000000000000000000076b12d219a32613cd370ea9649a860114d3015e000000000000000000000000d3b9610534994aab2777d8af6c41d1e54f2ef33f000000000000000000000000db69c372b30d7a663bde45d31a4886385f50ea51';

    const signers = [
      '0x080D263FAA8CBd848f0b9B24B40e1f23EA06b3A3',
      '0xCdEf689d3098A796F840A26f383CE19F4f023B5B',
      '0xb7bEA3A5d410F7c4eC2aa446ae4236F6Eed6b16A',
      '0x5ba2D2B875626901fed647411AD08009b1ee35e2',
      '0x21389cBcdb25c8859c704BD8Cd7252902384FceF',
      '0x03A67cD8467642a03d5ebd67F97157931D94fA32',
      '0x3650Da40Fe97A93bfC2623E0DcA3899a91Eca0e2',
      '0x1F31c45AE0605690D63D26d7CdA4035c3668D473',
      '0xCc1b49B86F79C7E50E294D3e3734fe94DB9A42F0',
      '0xA4EBE1e06dd0bf674B0757cd20b97Ee16b00aF1B',
      '0x8d4AE8b06701f53f7a34421461441E4492E1C578',
      '0x5007b477F939646b4E4416AFcEf6b00567F5F078',
      '0x55048BC9f3a3f373031fB32C0D0d5C1Bc6E10B3b',
      '0x8316e3Eb7eccfCAF0c1967903CcA8ECda3dF37E0',
      '0x503bd542a29F089319855cd9F6F6F937C7Be87c7',
      '0xbd34530f411130fd7aCB88b8251009A0829379aA',
      '0x54103390874885e164d69bf08B6db480E5E8fE5d',
      '0xC01465eBA4FA3A72309374bb67149A8FD14Cb687',
      '0xAF447dA1E8c277C41983B1732BECF39129BE5CA6',
      '0xbe15B23E9F03e3Bb44c5E35549354649fb25b87B',
      '0x1E15545b23B831fD39e1d9579427DeA61425DD47',
      '0xD1C8b1e58C1186597D1897054b738c551ec74BD4',
      '0x8EB664cD767f12507E7e3864Ba5B7E925090A0E5',
      '0x656Fc633eb33cF5daD0bCEa0E42cde85fb7A4Ab8',
      '0x076b12D219a32613cd370eA9649a860114D3015e',
      '0x0ac6c28B582016A55f6d4e3aC77b64749568Ffe1',
      '0xD3b9610534994aAb2777D8Af6C41d1e54F2ef33f',
      '0xbeB19b5EC84DdC9426d84e5cE7403AFB7BB56700',
      '0xd54DDB3A256a40061C41Eb6ADF4f412ca8e17c25',
      '0xdb69C372B30D7A663BDE45d31a4886385F50Ea51',
      '0x67a95e050d2E4200808A488628d55269dDeFC455',
    ];

    const ORIGIN = 0;

    await ism.enrollValidators([ORIGIN], [signers]);
    await ism.setThreshold(ORIGIN, 5);

    expect(
      await ism.verify(
        metadata,
        utils.formatMessage(
          1, // version, unimportant
          1, // nonce, unimportant
          ORIGIN,
          Wallet.createRandom().address,
          1, // destination, unimportant
          Wallet.createRandom().address,
          report,
        ),
      ),
    ).to.eql(true);
  });
});
